name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install 3.11

      - name: Check for Python code
        id: check-python
        run: |
          if find . -name "*.py" -type f | grep -q .; then
            echo "has_python=true" >> $GITHUB_OUTPUT
          else
            echo "has_python=false" >> $GITHUB_OUTPUT
          fi

      - name: Create virtual environment
        if: steps.check-python.outputs.has_python == 'true'
        run: uv venv

      - name: Install dependencies
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -f pyproject.toml ] || [ -f requirements.txt ]; then
            uv sync --dev
          else
            uv pip install ruff pytest mypy
          fi

      - name: Lint with ruff
        if: steps.check-python.outputs.has_python == 'true'
        run: uv run ruff check .

      - name: Type check with mypy
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          # Run mypy separately for each service to avoid duplicate module names
          # Note: Currently informational only (|| true) due to pre-existing type errors
          for service_dir in services/*/; do
            if [ -f "$service_dir/pyproject.toml" ]; then
              echo "Running mypy in $service_dir"
              cd "$service_dir"
              uv run mypy . --ignore-missing-imports || echo "Mypy found issues in $service_dir (non-blocking)"
              cd - > /dev/null
            fi
          done
          echo "Mypy checks complete (informational only)"

      - name: Run tests
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -d "tests" ]; then
            uv run pytest tests/ -v
          else
            echo "No tests directory found yet"
          fi

      - name: Project status
        if: steps.check-python.outputs.has_python == 'false'
        run: echo "No Python code yet - CI will run when services are added"

  commit-attribution:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for PR checks

      - name: Check AI agent attribution
        run: |
          # Determine which commits to check
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, check all commits in the PR
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            COMMITS=$(git log --pretty=format:"%H" $BASE_SHA..$HEAD_SHA)
            echo "Checking commits in PR..."
          else
            # For pushes, check just the latest commit
            COMMITS=$(git log -1 --pretty=format:"%H")
            echo "Checking latest commit..."
          fi

          # Check each commit
          AI_COMMITS=0
          HUMAN_COMMITS=0
          MISSING_MODEL=0

          for COMMIT_SHA in $COMMITS; do
            COMMIT_MSG=$(git log -1 --pretty=%B $COMMIT_SHA)
            SHORT_SHA=$(echo $COMMIT_SHA | cut -c1-7)

            # Check if commit is from an AI agent
            if echo "$COMMIT_MSG" | grep -qE "(Generated with \[Claude Code\]|Co-Authored-By: Claude)"; then
              AI_COMMITS=$((AI_COMMITS + 1))

              # Verify it has model/agent info
              if echo "$COMMIT_MSG" | grep -qE "(claude-|sonnet|opus|haiku|gpt-|gemini)"; then
                echo "✅ $SHORT_SHA: AI commit with model info"
              else
                echo "⚠️  $SHORT_SHA: AI commit but no model mentioned"
                MISSING_MODEL=$((MISSING_MODEL + 1))
              fi
            else
              HUMAN_COMMITS=$((HUMAN_COMMITS + 1))
              echo "ℹ️  $SHORT_SHA: Human commit or attribution unclear"
            fi
          done

          echo ""
          echo "Summary: $AI_COMMITS AI commits, $HUMAN_COMMITS human commits"
          if [ $MISSING_MODEL -gt 0 ]; then
            echo "⚠️  $MISSING_MODEL AI commit(s) missing model information"
            echo "Consider adding model info (e.g., 'via claude-sonnet-4') for tracking"
          fi

          # Always pass - this is informational only
          exit 0

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Dockerfiles
        id: check-docker
        run: |
          if find . -name "Dockerfile" -o -name "docker-compose.yml" | grep -q .; then
            echo "has_docker=true" >> $GITHUB_OUTPUT
          else
            echo "has_docker=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker images
        if: steps.check-docker.outputs.has_docker == 'true'
        run: |
          if [ -f "docker-compose.yml" ]; then
            docker-compose build
          else
            for dockerfile in $(find . -name "Dockerfile"); do
              dir=$(dirname $dockerfile)
              echo "Building Docker image in $dir"
              docker build -t test-build $dir
            done
          fi

      - name: Project status
        if: steps.check-docker.outputs.has_docker == 'false'
        run: echo "No Docker files yet - builds will run when services are added"
