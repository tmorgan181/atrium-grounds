name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install 3.11

      - name: Check for Python code
        id: check-python
        run: |
          if find . -name "*.py" -type f | grep -q .; then
            echo "has_python=true" >> $GITHUB_OUTPUT
          else
            echo "has_python=false" >> $GITHUB_OUTPUT
          fi

      - name: Create virtual environment
        if: steps.check-python.outputs.has_python == 'true'
        run: uv venv

      - name: Install dependencies
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -f pyproject.toml ] || [ -f requirements.txt ]; then
            uv sync --dev
          else
            uv pip install ruff pytest mypy
          fi

      - name: Lint with ruff
        if: steps.check-python.outputs.has_python == 'true'
        run: uv run ruff check .

      - name: Type check with mypy
        if: steps.check-python.outputs.has_python == 'true'
        run: uv run mypy . --ignore-missing-imports

      - name: Run tests
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -d "tests" ]; then
            uv run pytest tests/ -v
          else
            echo "No tests directory found yet"
          fi

      - name: Project status
        if: steps.check-python.outputs.has_python == 'false'
        run: echo "No Python code yet - CI will run when services are added"

  commit-attribution:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check AI agent attribution
        run: |
          # Get the latest commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)

          # Check if commit is from an AI agent (has Claude Code footer or Co-Authored-By: Claude)
          if echo "$COMMIT_MSG" | grep -qE "(Generated with \[Claude Code\]|Co-Authored-By: Claude)"; then
            echo "✅ AI agent commit detected - checking attribution..."

            # Verify it has model/agent info somewhere
            if echo "$COMMIT_MSG" | grep -qE "(claude-|sonnet|opus|haiku|gpt-|gemini)"; then
              echo "✅ Model information found in commit"
            else
              echo "⚠️  Warning: AI commit but no model mentioned"
              echo "Consider adding model info (e.g., 'via claude-sonnet-4') for tracking"
            fi
          else
            echo "ℹ️  Human commit or commit attribution unclear"
          fi

          # Always pass - this is informational only
          exit 0

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Dockerfiles
        id: check-docker
        run: |
          if find . -name "Dockerfile" -o -name "docker-compose.yml" | grep -q .; then
            echo "has_docker=true" >> $GITHUB_OUTPUT
          else
            echo "has_docker=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker images
        if: steps.check-docker.outputs.has_docker == 'true'
        run: |
          if [ -f "docker-compose.yml" ]; then
            docker-compose build
          else
            for dockerfile in $(find . -name "Dockerfile"); do
              dir=$(dirname $dockerfile)
              echo "Building Docker image in $dir"
              docker build -t test-build $dir
            done
          fi

      - name: Project status
        if: steps.check-docker.outputs.has_docker == 'false'
        run: echo "No Docker files yet - builds will run when services are added"
