name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Check for Python code
        id: check-python
        run: |
          if find . -name "*.py" -type f | grep -q .; then
            echo "has_python=true" >> $GITHUB_OUTPUT
          else
            echo "has_python=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          pip install ruff pytest mypy

      - name: Lint with ruff
        if: steps.check-python.outputs.has_python == 'true'
        run: ruff check .

      - name: Type check with mypy
        if: steps.check-python.outputs.has_python == 'true'
        run: mypy . --ignore-missing-imports

      - name: Run tests
        if: steps.check-python.outputs.has_python == 'true'
        run: |
          if [ -d "tests" ]; then
            pytest tests/ -v
          else
            echo "No tests directory found yet"
          fi

      - name: Project status
        if: steps.check-python.outputs.has_python == 'false'
        run: echo "No Python code yet - CI will run when services are added"

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Dockerfiles
        id: check-docker
        run: |
          if find . -name "Dockerfile" -o -name "docker-compose.yml" | grep -q .; then
            echo "has_docker=true" >> $GITHUB_OUTPUT
          else
            echo "has_docker=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker images
        if: steps.check-docker.outputs.has_docker == 'true'
        run: |
          if [ -f "docker-compose.yml" ]; then
            docker-compose build
          else
            for dockerfile in $(find . -name "Dockerfile"); do
              dir=$(dirname $dockerfile)
              echo "Building Docker image in $dir"
              docker build -t test-build $dir
            done
          fi

      - name: Project status
        if: steps.check-docker.outputs.has_docker == 'false'
        run: echo "No Docker files yet - builds will run when services are added"
